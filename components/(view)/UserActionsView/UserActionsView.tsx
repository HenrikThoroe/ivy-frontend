'use client'

import Icon, { IconName } from '@/components/(media)/Icon/Icon'
import ActionModal from '@/components/(modal)/ActionModal/ActionModal'
import AlertModal from '@/components/(modal)/AlertModal/AlertModal'
import LoadingModal from '@/components/(modal)/LoadingModal/LoadingModal'
import WithModal from '@/components/(modal)/WithModal/WithModal'
import { clientStrategy } from '@/lib/api/auth/strategy/client'
import { AuthClient } from '@/lib/api/clients/AuthClient'
import classNames from 'classnames'
import { useRouter } from 'next/navigation'
import { useState } from 'react'

interface ActionProps {
  icon: IconName
  label: string
  onClick?: () => void
  style: 'primary' | 'destructive'
}

/**
 * Actions that can be performed by the user.
 * Allows to logout and delete the account.
 */
export default function UserActionsView() {
  const strategy = clientStrategy()
  const client = new AuthClient(strategy)
  const router = useRouter()

  const [error, setError] = useState<string>()
  const [showError, setShowError] = useState(false)
  const [loading, setLoading] = useState(false)

  //* Event Handler

  const handleLogout = async () => {
    if (!strategy.logout) {
      return
    }

    setLoading(true)

    await client.signOut()
    strategy.logout()
    router.push('/login')
  }

  const handleDelete = async () => {
    if (!strategy.logout) {
      return
    }

    setLoading(true)

    const res = await client.delete()

    if (res.success) {
      strategy.logout()
      router.push('/login')
    } else {
      setError(`The server responded with: ${res.error.message}`)
      setLoading(false)
      setShowError(true)
    }
  }

  //* UI

  const DeletePrompt = (
    <ActionModal
      title="Delete Account?"
      description="Deleting your account cannot be undone. Are you sure you want to continue?"
      icon="delete"
      action={{
        label: 'Delete',
        onClick: handleDelete,
        variant: 'danger',
      }}
    />
  )

  const Action = ({ icon, label, onClick: action, style }: ActionProps) => (
    <button
      onClick={action}
      className={classNames(
        'flex w-max flex-row gap-2 rounded-md px-8 py-2 text-base font-medium text-on-secondary shadow-md',
        'hover:shadow-none',
        {
          'bg-action-primary hover:bg-action-primary-active': style === 'primary',
          'bg-action-destructive hover:bg-action-destructive-active': style === 'destructive',
        }
      )}
    >
      <Icon name={icon} />
      {label}
    </button>
  )

  const Label = ({ children }: { children: React.ReactNode }) => (
    <span className="text-sm font-light text-on-primary-light">{children}</span>
  )

  const Box = ({ children }: { children: React.ReactNode }) => (
    <div className="flex flex-col items-start gap-2">{children}</div>
  )

  //* Render

  return (
    <>
      <LoadingModal open={loading} />
      <AlertModal
        open={showError}
        onClose={() => setShowError(false)}
        icon="error"
        variant="error"
        title="This did not work!"
        description={error ?? ''}
      />
      <section className="flex w-full flex-col gap-8">
        <Box>
          <Label>You will be redirected to the login page.</Label>
          <Action icon="logout" label="Logout" onClick={handleLogout} style="primary" />
        </Box>
        <Box>
          <Label>
            By deleting your account, all your personal data is forgotten. Data that may have been
            generated by you or computing systems you own, will be retained.
          </Label>
          <WithModal modal={DeletePrompt}>
            <Action icon="delete" label="Delete Account" style="destructive" />
          </WithModal>
        </Box>
      </section>
    </>
  )
}
